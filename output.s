# Assembly generated by compiler
.data
t0: .space 4
t1: .space 4
t3: .space 4
t4: .space 4
t5: .space 4

.text
.globl main
main:
    # Function prologue
    push %ebp
    mov %esp, %ebp
    sub $20, %esp
    # t0 = if t1*5 > 67 goto t0
    mov t1*5, %eax
    cmp $67, %eax
    jg t0
    # t1 = t1*5 * 5
    mov t1*5, %eax
    mov $5, %ebx
    imul %ebx, %eax
    mov %eax, t1
    # L0 = LABEL L0
L0:
    # L1 = LABEL L1
L1:
    #  = if !t0 goto 
    mov t0, %eax
    test %eax, %eax
    je L_next_0
L_next_0:
    # L1 = goto L1
    jmp L1
    # L2 = LABEL L2
L2:
    # L3 = LABEL L3
L3:
    # t3 = 0
    mov $0, t3
    # t4 = 4
    mov $4, t4
    # t5 = 13
    mov $13, t5
    # Function epilogue
    mov $0, %eax
    mov %ebp, %esp
    pop %ebp
    ret
